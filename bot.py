import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import json
import os

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telebot.TeleBot('TELEGRAM_BOT_TOKEN')

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
USER_DATA_FILE = 'user_data.json'

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ–∞–π–ª—É –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def initialize_user_data_file():
    # –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –π–æ–≥–æ
    if not os.path.exists(USER_DATA_FILE):
        with open(USER_DATA_FILE, 'w') as file:
            json.dump({}, file)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ñ–∞–π–ª—É
def load_user_data():
    with open(USER_DATA_FILE, 'r') as file:
        return json.load(file)

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É —Ñ–∞–π–ª
def save_user_data():
    with open(USER_DATA_FILE, 'w') as file:
        json.dump(users_data, file)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤
initialize_user_data_file()

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
users_data = load_user_data()

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def send_main_menu(chat_id):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton('üá∫üá¶ –ö–ª—ñ–∫'), KeyboardButton('‚≠êÔ∏è –¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤'), KeyboardButton('üë• –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—î–∫—Ç—É'))

    user_info = users_data.get(str(chat_id), {"nickname": "–ù–µ–≤—ñ–¥–æ–º–∏–π", "account": 0, "channel": "–ù—ñ—Ö—Ç–æ"})
    nickname = user_info["nickname"]
    account = user_info["account"]
    channel = user_info["channel"]
    money_sent = account * 0.002

    text = (
        f"üë§ –ù—ñ–∫–Ω–µ–π–º: {nickname}\n"
        f"üëÄ –†–∞—Ö—É–Ω–æ–∫: {account}\n"
        f"‚ù§Ô∏è –ì—Ä–æ—à–µ–π –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É –¥—ñ—Ç—è–º –•–µ—Ä—Å–æ–Ω—â–∏–Ω–∏: {money_sent:.2f} –≥—Ä–Ω\n"
        f"‚ù§Ô∏è‚Äçüî• –ü—Ä–∏–≤—ñ–≤ –¥–æ –ø—Ä–æ—î–∫—Ç—É: {channel}\n\n"
        "üá∫üá¶ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å–ø–æ–∫—ñ–π —Ç–∞ –≤—ñ—Ä–∏–º–æ –≤ –ó–°–£. (–°) 2024 KristalMedia\n"
    )
    bot.send_message(chat_id, text, reply_markup=markup)

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(commands=['start'])
def start_handler(message):
    chat_id = str(message.chat.id)

    if chat_id in users_data:
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π, –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        send_main_menu(chat_id)
    else:
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–æ–≤–∏–π, —Ä–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–æ—Ü–µ—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(KeyboardButton('–¢–∞–∫!'))
        bot.send_message(
            chat_id,
            "üññ –í—ñ—Ç–∞—î–º–æ!\n\n"
            "Ditu.Khersonu ‚Äî —Ü–µ –±–ª–∞–≥–æ–¥—ñ–π–Ω–∏–π –ø—Ä–æ—î–∫—Ç, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —Å–ø—ñ–ª—å–Ω–æ—Ç–æ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç–µ–ª–µ–±–∞—á–µ–Ω–Ω—è. "
            "–í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —è–∫–∞ –∑–±—ñ–ª—å—à—É—î –≤–∞—à –≤–Ω–µ—Å–æ–∫. –ó –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ–∫—É 0,002 –≥—Ä–Ω –Ω–∞–¥—Ö–æ–¥–∏—Ç—å –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É –¥—ñ—Ç—è–º –•–µ—Ä—Å–æ–Ω—â–∏–Ω–∏.\n\n"
            "–ü–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–∑–Ω–∞–π–æ–º—Ç–µ—Å—è –∑ –Ω–∞—à–æ—é –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ ‚Äî https://example.com/\n\n"
            "–í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—è –∑ –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ?",
            reply_markup=markup
        )

@bot.message_handler(func=lambda message: message.text == '–¢–∞–∫!')
def agreement_handler(message):
    chat_id = str(message.chat.id)
    bot.send_message(chat_id, "üòú –†–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!\n\n–í–≤–µ–¥—ñ—Ç—å –Ω—ñ–∫–Ω–µ–π–º, —è–∫–∏–π –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—è –≤ —Ç–∞–±–ª–∏—Ü—ñ –ª—ñ–¥–µ—Ä—ñ–≤.")

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
    users_data[chat_id] = {"registration_step": "nickname"}
    save_user_data()

@bot.message_handler(func=lambda message: users_data.get(str(message.chat.id), {}).get("registration_step") == "nickname")
def nickname_handler(message):
    chat_id = str(message.chat.id)
    nickname = message.text

    users_data[chat_id] = {"nickname": nickname, "account": 0, "channel": "–ù—ñ—Ö—Ç–æ"}
    save_user_data()

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton('Example1'), KeyboardButton('Example2'), KeyboardButton('Example3'), KeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏'))
    bot.send_message(chat_id, "–Ø–∫–∏–π —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–∏–≤ –≤–∞—Å –¥–æ –ø—Ä–æ—î–∫—Ç—É?", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ['Example1', 'Example2', 'Example3', '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏'])
def channel_handler(message):
    chat_id = str(message.chat.id)
    channel = message.text

    if channel == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏':
        bot.send_message(chat_id, "üíî –®–∫–æ–¥–∞..")
    else:
        bot.send_message(chat_id, f"‚ù§Ô∏è –í–∞—Å –∑–∞–ø—Ä–æ—Å–∏–≤ \"{channel}\".")

    users_data[chat_id]["channel"] = channel
    save_user_data()
    send_main_menu(chat_id)

@bot.message_handler(func=lambda message: message.text == 'üá∫üá¶ –ö–ª—ñ–∫')
def click_handler(message):
    chat_id = str(message.chat.id)

    if chat_id in users_data:
        users_data[chat_id]["account"] += 1
        save_user_data()
        bot.send_message(chat_id, "+1")
        send_main_menu(chat_id)

@bot.message_handler(func=lambda message: message.text == '‚≠êÔ∏è –¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤')
def leaderboard_handler(message):
    chat_id = str(message.chat.id)

    sorted_users = sorted(
        users_data.items(),
        key=lambda x: x[1].get("account", 0) * 0.002,
        reverse=True
    )
    leaderboard_text = "ü¶∏ –¢–∞–±–ª–∏—Ü—è –Ω–∞–π–±—ñ–ª—å—à–∏—Ö –±–ª–∞–≥–æ–¥—ñ–π–Ω–∏–∫—ñ–≤ —Ç–∞ —Ä—è—Ç—ñ–≤–Ω–∏–∫—ñ–≤ –¥—ñ—Ç–æ–∫ –•–µ—Ä—Å–æ–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ\n\n"

    for idx, (user_id, user_info) in enumerate(sorted_users[:10], 1):
        account = user_info.get("account", 0) 
        nickname = user_info.get('nickname', '–ë–µ–∑ —ñ–º–µ–Ω—ñ')
        leaderboard_text += f"{idx}. {nickname}. –í—ñ–¥–ø—Ä–∞–≤–∏–≤ {account * 0.002:.2f} –≥—Ä–∏–≤–µ–Ω—å.\n"

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton('‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥'))
    bot.send_message(chat_id, leaderboard_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
def back_handler(message):
    chat_id = str(message.chat.id)
    send_main_menu(chat_id)

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "üë• –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—î–∫—Ç—É"
@bot.message_handler(func=lambda message: message.text == 'üë• –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—î–∫—Ç—É')
def team_handler(message):
    chat_id = str(message.chat.id)
    bot.send_message(
        chat_id,
        "This bot is based on the original project available at [https://github.com/yaskravo/ditukhersonu_old](https://github.com/yaskravo/ditukhersonu_old). All credit for the original creation goes to **yaskravo**."
    )
    send_main_menu(chat_id)

def admin_panel(chat_id):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton('üîí –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
        KeyboardButton('‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –Ω—ñ–∫–Ω–µ–π–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
    )
    markup.add(KeyboardButton('üí∞ –î–æ–¥–∞—Ç–∏ –¥–æ —Ä–∞—Ö—É–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'), KeyboardButton('üì∞ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–∏–Ω—É'))
    bot.send_message(chat_id, "–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=markup)

@bot.message_handler(commands=['admin'])
def admin_command(message):
    if str(message.chat.id) == "YOUR_ID_TELEGRAM":
        admin_panel(message.chat.id)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–¥–º—ñ–Ω –ø—Ä–∞–≤.")

@bot.message_handler(func=lambda message: message.text == 'üîí –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
def delete_user_prompt(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω—ñ–∫–Ω–µ–π–º –∞–±–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—è:")
    bot.register_next_step_handler(message, delete_user)

def delete_user(message):
    user_identifier = message.text
    if user_identifier in users_data:
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è:")
        bot.register_next_step_handler(message, lambda msg: confirm_blocking(msg, user_identifier))
    else:
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

def confirm_blocking(message, user_identifier):
    reason = message.text
    bot.send_message(message.chat.id, f"–í–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞? –ü—Ä–∏—á–∏–Ω–∞: {reason}. –í–≤–µ–¥—ñ—Ç—å '–¢–∞–∫' –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.")
    bot.register_next_step_handler(message, lambda msg: block_user(msg, user_identifier, reason))
def block_user(message, user_identifier, reason):
    if message.text.lower() == "—Ç–∞–∫":
        del users_data[user_identifier]
        save_user_data()
        bot.send_message(user_identifier, f"–ù–∞ –∂–∞–ª—å, –≤–∏ –±—É–ª–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ó–∞ {reason}.")
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–¥–∞–ª–µ–Ω–∏–π —Ç–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π.")
    else:
        bot.send_message(message.chat.id, "–ë–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    admin_panel(message.chat.id)

@bot.message_handler(func=lambda message: message.text == 'üí∞ –î–æ–¥–∞—Ç–∏ –¥–æ —Ä–∞—Ö—É–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
def add_account_prompt(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Ä–∞—Ö—É–Ω–∫—É:")
    bot.register_next_step_handler(message, add_to_account)

def add_to_account(message):
    user_identifier = message.text
    if user_identifier in users_data:
        bot.send_message(message.chat.id, f"–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É, —è–∫—É –±–∞–∂–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∏ –¥–æ —Ä–∞—Ö—É–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID {user_identifier}:")
        bot.register_next_step_handler(message, lambda msg: update_account(msg, user_identifier))
    else:
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

def update_account(message, user_identifier):
    try:
        addition = int(message.text)
        users_data[user_identifier]['account'] += addition
        save_user_data()
        bot.send_message(message.chat.id, f"–†–∞—Ö—É–Ω–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID {user_identifier} –∑–º—ñ–Ω–µ–Ω–æ. –î–æ–¥–∞–Ω–æ {addition} –æ–¥–∏–Ω–∏—Ü—å.")
        bot.send_message(user_identifier, f"üßê –í–∞–º –∑–º—ñ–Ω–∏–ª–∏ —Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞ {addition} –æ–¥–∏–Ω–∏—Ü—å!\n–í–∞—à –Ω–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫: {users_data[user_identifier]['account']}")
    except ValueError:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥—ñ–π—Å–Ω–µ —á–∏—Å–ª–æ –¥–ª—è —Ä–∞—Ö—É–Ω–∫—É.")
    admin_panel(message.chat.id)

@bot.message_handler(func=lambda message: message.text == '‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –Ω—ñ–∫–Ω–µ–π–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
def change_nickname_prompt(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω—ñ–∫–Ω–µ–π–º –∞–±–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–º—ñ–Ω–∏ –Ω—ñ–∫–Ω–µ–π–º—É:")
    bot.register_next_step_handler(message, change_nickname)

def change_nickname(message):
    user_identifier = message.text
    if user_identifier in users_data:
        bot.send_message(message.chat.id, f"–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –Ω—ñ–∫–Ω–µ–π–º –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_identifier}:")
        bot.register_next_step_handler(message, lambda msg: update_nickname(msg, user_identifier))
    else:
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

def update_nickname(message, user_identifier):
    new_nickname = message.text
    old_nickname = users_data[user_identifier]['nickname']
    users_data[user_identifier]['nickname'] = new_nickname
    save_user_data()
    bot.send_message(user_identifier, f"‚ö†Ô∏è –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –∑–º—ñ–Ω–∏–≤ –≤–∞—à –Ω—ñ–∫–Ω–µ–π–º!\n–í–∞—à —Å—Ç–∞—Ä–∏–π –Ω—ñ–∫–Ω–µ–π–º: {old_nickname}\n–í–∞—à –Ω–æ–≤–∏–π –Ω—ñ–∫–Ω–µ–π–º: {new_nickname}")
    bot.send_message(message.chat.id, f"–ù—ñ–∫–Ω–µ–π–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {old_nickname} –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ {new_nickname}.")
    admin_panel(message.chat.id)

@bot.message_handler(func=lambda message: message.text == 'üì∞ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–∏–Ω—É')
def send_news_prompt(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–Ω—É:")
    bot.register_next_step_handler(message, send_news)

def send_news(message):
    news = message.text
    for user_id in users_data:
        bot.send_message(user_id, f"{news}")
    bot.send_message(message.chat.id, "–ù–æ–≤–∏–Ω–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º.")
    admin_panel(message.chat.id)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
